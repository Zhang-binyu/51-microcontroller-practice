C51 COMPILER V9.01   MAIN                                                                  06/12/2022 21:19:59 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\编程学习\单片机C51\开发工具\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"reg52.h"
   2          
   3          typedef unsigned int u16;       //对系统默认数据类型进行重定义
   4          typedef unsigned char u8;
   5          
   6          sbit LSA=P2^2;
   7          sbit LSB=P2^3;
   8          sbit LSC=P2^4;//设置38译码器的输入端
   9          
  10          //定义独立按键控制脚
  11          sbit KEY1=P3^1;
  12          sbit KEY2=P3^0;
  13          sbit KEY3=P3^2;
  14          
  15          u8 second=0;
  16          u8 minute=0;
  17          u8 hour=0;              //定义时分秒
  18          
  19          u16 num=0;
  20          //设置数码管初值以及中断次数变量
  21          
  22          unsigned char code smgduan[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
  23          //因为我们的单片机数码管型号是3461AS-1为共阴极数码管
  24          
  25          //使用宏定义独立按键按下的键值
  26          #define KEY1_PRESS      1
  27          #define KEY2_PRESS      2
  28          #define KEY3_PRESS      3
  29          #define KEY_UNPRESS     0
  30          
  31          #define KEY_MATRIX_PORT P1      //      使用宏定义矩阵按键控制口
  32          
  33          void DelayMS(u8 i)
  34          {
  35   1              //大约 1ms
  36   1              u8 j=100;
  37   1              while(i--){
  38   2                      while(j--);  
  39   2              }
  40   1      }
  41          
  42          /*
  43                  函数名          ：      key_matrix_ranks_scan
  44                  函数功能        :       使用行列式扫描方法，检测矩阵按键是否按下，按下则返回对应键值
  45                  输入            ：      无
  46                  输出            ：      key_value:1-16，对应s1-s16键，
  47                                                  0:按键未按下
  48          */
  49          
  50          u8 key_matrix_ranks_scan(void)
  51          {
  52   1              u8 key_value=0;
  53   1      
  54   1              KEY_MATRIX_PORT=0xf7;   //      给第一列赋值0，其余全为1
  55   1              if(KEY_MATRIX_PORT!=0xf7)       //      判断第一列按键是否按下
C51 COMPILER V9.01   MAIN                                                                  06/12/2022 21:19:59 PAGE 2   

  56   1              {
  57   2                      DelayMS(10);    // 消抖
  58   2                      switch(KEY_MATRIX_PORT) //      保存第一列按键按下后的键值
  59   2                      {
  60   3                              case 0x77:key_value=1;break;
  61   3                              case 0xb7:key_value=5;break;
  62   3                              case 0xd7:key_value=9;break;
  63   3                              case 0xe7:key_value=13;break;
  64   3                      }
  65   2              }
  66   1              while(KEY_MATRIX_PORT!=0xf7);   //      等待按键松开
  67   1      
  68   1              KEY_MATRIX_PORT=0xfb;   //      给第二列赋值0，其余全为1
  69   1              if(KEY_MATRIX_PORT!=0xfb)       //      判断第二列按键是否按下
  70   1              {
  71   2                      DelayMS(10);    //      消抖
  72   2                      switch(KEY_MATRIX_PORT) //      保存第二列按键按下后的键值
  73   2                      {
  74   3                              case 0x7b:key_value=2;break;
  75   3                              case 0xbb:key_value=6;break;
  76   3                              case 0xdb:key_value=10;break;
  77   3                              case 0xeb:key_value=14;break;
  78   3                      }
  79   2              }
  80   1              while(KEY_MATRIX_PORT!=0xfb);   //      等待按键松开
  81   1      
  82   1              KEY_MATRIX_PORT=0xfd;   //      给第三列赋值0，其余全为1
  83   1              if(KEY_MATRIX_PORT!=0xfd)       //      判断第三列按键是否按下
  84   1              {
  85   2                      DelayMS(10);    //      消抖
  86   2                      switch(KEY_MATRIX_PORT) //      保存第三列按键按下后的键值
  87   2                      {
  88   3                              case 0x7d:key_value=3;break;
  89   3                              case 0xbd:key_value=7;break;
  90   3                              case 0xdd:key_value=11;break;
  91   3                              case 0xed:key_value=15;break;
  92   3                      }
  93   2              }
  94   1              while(KEY_MATRIX_PORT!=0xfd);   //等待按键松开
  95   1      
  96   1              KEY_MATRIX_PORT=0xfe;   //给第四列赋值0，其余全为1
  97   1              if(KEY_MATRIX_PORT!=0xfe)       //判断第四列按键是否按下
  98   1              {
  99   2                      DelayMS(10);    //消抖
 100   2                      switch(KEY_MATRIX_PORT) //保存第四列按键按下后的键值
 101   2                      {
 102   3                              case 0x7e:key_value=4;break;
 103   3                              case 0xbe:key_value=8;break;
 104   3                              case 0xde:key_value=12;break;
 105   3                              case 0xee:key_value=16;break;
 106   3                      }
 107   2              }
 108   1              while(KEY_MATRIX_PORT!=0xfe);   //等待按键松开
 109   1      
 110   1              return key_value;
 111   1      }
 112          
 113          void DIGdisplay()
 114          {               
 115   1                       LSA = 0 ;LSB = 0 ; LSC = 0 ;P0 = smgduan[second%10];DelayMS(1);P0=0x00;        //第一位数码管，消影            
 116   1                       LSA = 1 ;LSB = 0 ; LSC = 0 ;P0 = smgduan[second/10];DelayMS(1);P0=0x00;                //第二位数码管，消影
 117   1                       
C51 COMPILER V9.01   MAIN                                                                  06/12/2022 21:19:59 PAGE 3   

 118   1      
 119   1                       LSA = 1 ;LSB = 1 ; LSC = 0 ;P0 = smgduan[minute%10];DelayMS(1);P0=0x00;                //第四位数码管，消影
 120   1                       LSA = 0 ;LSB = 0 ; LSC = 1 ;P0 = smgduan[minute/10];DelayMS(1);P0=0x00;                //第五位数码管，消影
 121   1                       
 122   1                       LSA = 0 ;LSB = 1 ; LSC = 1 ;P0 = smgduan[hour%10];DelayMS(1);P0=0x00;          //第六位数码管，消影
 123   1                       LSA = 1 ;LSB = 1 ; LSC = 1 ;P0 = smgduan[hour/10];DelayMS(1);P0=0x00;          //第七位数码管，消影
 124   1                       
 125   1                       LSA = 0 ;LSB = 1 ; LSC = 0 ;P0 = 0x40;DelayMS(1);P0=0x00;                      
 126   1                       LSA = 1 ;LSB = 0 ; LSC = 1 ;P0 = 0x40;DelayMS(1);P0=0x00;              //第五位和第三位显示一杠，消影                                                                                                   
 127   1      }        
 128          
 129          
 130          void time0_init(void)
 131          {
 132   1              TMOD=0X01;//选择为定时器0模式，工作方式1
 133   1              TH0=0x3c;       //给定时器赋初值，定时50ms
 134   1              TL0=0xb0;       
 135   1              ET0=1;//打开定时器0中断允许
 136   1              EA=1;//打开总中断
 137   1              
 138   1      }
 139          
 140          void main()
 141          {
 142   1              u8 key=0;
 143   1              time0_init();
 144   1              while(1){
 145   2                      DIGdisplay();
 146   2                      if(KEY1==0){
 147   3                              DelayMS(1);
 148   3                              if(KEY1==0){
 149   4                                      TR0=1;
 150   4                                      while(KEY1==0);
 151   4                              }
 152   3                      }if(KEY2==0){
 153   3                              DelayMS(1);
 154   3                              if(KEY2==0){
 155   4                                      TR0=0;
 156   4                                      while(KEY2==0);
 157   4                              }
 158   3                      }if(KEY3==0){
 159   3                              DelayMS(1);
 160   3                              if(KEY3==0){
 161   4                                      hour=0;
 162   4                                      minute=0;
 163   4                                      second=0;
 164   4                                      while(KEY3==0);
 165   4                              }
 166   3                      }
 167   2                      key=key_matrix_ranks_scan();
 168   2                      if(key!=0){
 169   3                              switch(key){
 170   4                                      case 1:if(second!=59)second++;break;            //秒增一
 171   4                                      case 2:if(second!=0)second--;break;                     //秒减一
 172   4                                      case 3:second=59;break;                                         //秒置为五十九
 173   4                                      case 4:second=0;break;                                          //秒置为零
 174   4                              
 175   4                                      case 5:if(minute!=59)minute++;break;            //分钟增一
 176   4                                      case 6:if(minute!=0)minute--;break;                     //分钟减一
 177   4                                      case 7:minute=59;break;                                         //分钟置为五十九
 178   4                                      case 8:minute=0;break;                                          //分钟置为零
 179   4                              
C51 COMPILER V9.01   MAIN                                                                  06/12/2022 21:19:59 PAGE 4   

 180   4                                      case 9:if(hour!=23)hour++;break;                        //小时增一
 181   4                                      case 10:if(hour!=0)hour--;break;                        //小时减一
 182   4                                      case 11:hour=23;break;                                          //小时置为五十九
 183   4                                      case 12:hour=0;break;                                           //小时置为零
 184   4                              }
 185   3                      }
 186   2              }
 187   1      }
 188          
 189          void time0()interrupt 1//定时器0中断函数
 190          {
 191   1              TL0 = 0xb0;             //设置定时初值
 192   1              TH0 = 0x3c;             //设置定时初值  50ms
 193   1              num++;
 194   1              if(num==20)        //1s
 195   1              {
 196   2                      num=0;
 197   2              second++;
 198   2                      if(second==60){
 199   3                              second=0;
 200   3                              minute++;
 201   3                      }
 202   2                      if(minute==60){
 203   3                              minute=0;
 204   3                              hour++;
 205   3                      }
 206   2                      if(hour==24){
 207   3                              hour=0;
 208   3                      }
 209   2              }                                               
 210   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    709    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
